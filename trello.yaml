openapi: 3.1.0
info:
  title: Trello Proxy API
  description: Прокси API для полного доступа к Trello через Railway. GPT может управлять
    досками, списками, карточками, участниками и комментариями.
  version: 1.0.0
servers:
- url: https://mindexecutor-production.up.railway.app
  description: Railway backend proxy
paths:
  /boards:
    get:
      operationId: getBoards
      summary: Получить все доски пользователя
      responses:
        '200':
          description: Список досок Trello
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /boards/{boardId}/lists:
    get:
      operationId: getListsOnBoard
      summary: Получить списки на доске
      parameters:
      - name: boardId
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Списки на доске
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /lists/{listId}/cards:
    get:
      operationId: getCardsInList
      summary: Получить карточки в списке
      parameters:
      - name: listId
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Карточки в списке
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /cards/{cardId}:
    put:
      operationId: updateCard
      summary: Обновить карточку (название, описание и др.)
      parameters:
      - name: cardId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                desc:
                  type: string
      responses:
        '200':
          description: Карточка обновлена
          content:
            application/json:
              schema:
                type: object
  /cards:
    post:
      operationId: createCard
      summary: Создать новую карточку
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
              - name
              - idList
              properties:
                name:
                  type: string
                desc:
                  type: string
                idList:
                  type: string
      responses:
        '200':
          description: Карточка создана
          content:
            application/json:
              schema:
                type: object
  /cards/{cardId}/idList:
    put:
      operationId: moveCardToList
      summary: Переместить карточку в другой список
      parameters:
      - name: cardId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
              - value
              properties:
                value:
                  type: string
      responses:
        '200':
          description: Карточка перемещена
          content:
            application/json:
              schema:
                type: object
  /cards/{cardId}/members:
    post:
      operationId: addMemberToCard
      summary: Добавить участника к карточке
      parameters:
      - name: cardId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
              - value
              properties:
                value:
                  type: string
      responses:
        '200':
          description: Участник добавлен
          content:
            application/json:
              schema:
                type: object
    delete:
      operationId: removeMemberFromCard
      summary: Удалить участника с карточки
      parameters:
      - name: cardId
        in: path
        required: true
        schema:
          type: string
      - name: memberId
        in: query
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Участник удалён
          content:
            application/json:
              schema:
                type: object
  /cards/{cardId}/actions/comments:
    post:
      operationId: commentOnCard
      summary: Добавить комментарий к карточке
      parameters:
      - name: cardId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
              - text
              properties:
                text:
                  type: string
      responses:
        '200':
          description: Комментарий добавлен
          content:
            application/json:
              schema:
                type: object
  /proxy/trello:
    post:
      operationId: callTrelloAPI
      summary: Выполнить запрос к Trello API через прокси. Ключ и токен подставляются
        автоматически.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                method:
                  type: string
                  example: GET
                endpoint:
                  type: string
                  example: /members/me
                params:
                  type: object
                data:
                  type: object
      responses:
        '200':
          description: Ответ от Trello API
          content:
            application/json:
              schema:
                type: object
